services:
  database:
    image: postgres:16
    container_name: ecommers_db
    ports:
      - "5432:5432"
    env_file : 
     - ./backend/.env 
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes: 
     - ./pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build: ./backend 
    image: ecommers-backend  
    container_name: ecommers-backend
    depends_on:
      - database
    ports:
      - "3000:3000"  
    env_file : 
     - ./backend/.env
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_TYPE: postgres
      JWT_SECRET: ${JWT_SECRET}
  
  # frontend:
  #   build: ./frontend 
  frontend:
    build:
      context: ./frontend
      args:
       NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
    image: ecommers-frontend  
    container_name: ecommers-frontend
    depends_on:
      - backend
    ports:
      - "3001:3000"  
    env_file : 
     - ./frontend/.env
    environment:
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
    # i see my .env in frontend but it cannot sense the env in ecommers folder so i hard coded 
    # --- ADD THIS SECTION FOR LIVE RELOAD ---
    develop:
      watch:
        # This rule syncs source code changes without rebuilding the image.
        # It's fast and perfect for NestJS development.
        - action: sync
          path: ./src/app
          target: /usr/src/app/src/app

        # This rule rebuilds the image if you change your dependencies.
        - action: rebuild
          path: package.json
    # ----------------------------------------
    
    restart: unless-stopped
